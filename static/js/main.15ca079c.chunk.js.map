{"version":3,"sources":["Components/Lyrics.js","Components/Search.js","Components/Songs.js","App.js","reportWebVitals.js","index.js"],"names":["Lyrics","lyrics","Search","handleSearch","useState","inputValue","setInputValue","className","type","value","onChange","e","target","placeholder","onClick","Songs","allSongs","getLyrics","map","song","index","title","artist","name","App","songs","setSongs","setLyrics","searchInput","setSearchInput","useEffect","fetchData","a","fetch","res","json","data","length","trim","id","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAQeA,EARA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACd,OACI,8BACI,4BAAIA,OCaDC,EAdA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACGC,mBAAS,IADZ,mBAC1BC,EAD0B,KACdC,EADc,KAGjC,OACI,sBAAKC,UAAU,mCAAf,UACI,oBAAIA,UAAU,cAAd,oCACA,sBAAKA,UAAU,kBAAf,UACI,uBAAOC,KAAK,OAAOC,MAAOJ,EAAYK,SAAU,SAACC,GAAD,OAAOL,EAAcK,EAAEC,OAAOH,QAAQF,UAAU,eAAeM,YAAY,gCAC3H,wBAAQC,QAAS,kBAAMX,EAAa,CAAEE,gBAAeE,UAAU,6BAA/D,2BCYDQ,EAtBD,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACvB,OACI,qBAAKV,UAAU,sCAAf,SAEQS,EAASE,KAAI,SAACC,EAAMC,GAChB,OACI,sBAAiBb,UAAU,gDAA3B,UACI,sBAAKA,UAAU,WAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BY,EAAKE,QAClC,oBAAGd,UAAU,cAAb,sBAAoC,+BAAOY,EAAKG,OAAOC,aAE3D,qBAAKhB,UAAU,qCAAf,SACI,wBAAQO,QAAS,kBAAMG,EAAU,GAAD,OAAIE,EAAKG,OAAOC,MAAhB,UAA2BJ,EAAKE,SAAUd,UAAU,kBAApF,4BANEa,SCiDnBI,MAjDf,WAAgB,IAAD,EACapB,mBAAS,IADtB,mBACNqB,EADM,KACCC,EADD,OAEetB,mBAAS,IAFxB,mBAENH,EAFM,KAEE0B,EAFF,OAGyBvB,mBAAS,IAHlC,mBAGNwB,EAHM,KAGOC,EAHP,KAkCb,OA7BAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,8BAAAC,EAAA,sEACEC,MAAM,kCAAD,OAAmCL,IAD1C,cACVM,EADU,gBAEGA,EAAIC,OAFP,OAEVC,EAFU,OAGhBV,EAASU,EAAKA,MACdT,EAAU,IAJM,2CAAH,qDAMXC,EAAYS,OAAS,GACvBN,EAAUH,KAEX,CAACA,IAoBF,qBAAKrB,UAAU,YAAf,SACE,uBAAMA,UAAU,2BAAhB,UACE,cAAC,EAAD,CAAQJ,aApBY,SAAC,GAAoB,IAAlBE,EAAiB,EAAjBA,YAC3BA,EAAaA,EAAWiC,QACTD,OAAS,GACtBR,EAAexB,MAmBZJ,GAAU,cAAC,EAAD,CAAQA,OAAQA,IAGzBwB,EAAMY,OAAS,cAAC,EAAD,CAAOrB,SAAUS,EAAOR,UAlBnB,SAACK,EAAQiB,GACnCC,QAAQC,IAAR,oCAAyCnB,EAAzC,YAAmDiB,IACpC,uCAAG,8BAAAP,EAAA,sEACEC,MAAM,6BAAD,OAA8BX,EAA9B,YAAwCiB,IAD/C,cACVL,EADU,gBAEGA,EAAIC,OAFP,OAEVC,EAFU,OAGhBT,EAAUS,EAAKnC,QAHC,2CAAH,oDAKfgB,MAWkF,4BCpCvEyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BJ,IAASC,OAAO,cAAC,EAAD,IAASE,SAASC,eAAe,SAMjDb,M","file":"static/js/main.15ca079c.chunk.js","sourcesContent":["const Lyrics = ({ lyrics }) => {\r\n    return (\r\n        <div>\r\n            <p>{lyrics}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Lyrics;","import { useState } from \"react\";\r\n\r\nconst Search = ({ handleSearch }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    return (\r\n        <div className=\"search-bar col-md-6 mx-auto mt-5\">\r\n            <h1 className=\"text-center\">Hard Rock Lyric Search</h1>\r\n            <div className=\"search-box my-5\">\r\n                <input type=\"text\" value={inputValue} onChange={(e) => setInputValue(e.target.value)} className=\"form-control\" placeholder=\"Enter your artist song name\" />\r\n                <button onClick={() => handleSearch({ inputValue })} className=\"btn btn-success search-btn\">Search</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","const Songs = ({ allSongs, getLyrics }) => {\r\n    return (\r\n        <div className=\"search-result col-md-8 mx-auto py-4\">\r\n            {\r\n                allSongs.map((song, index) => {\r\n                    return (\r\n                        <div key={index} className=\"single-result row align-items-center my-3 p-3\">\r\n                            <div className=\"col-md-9\">\r\n                                <h3 className=\"lyrics-name\">{song.title}</h3>\r\n                                <p className=\"author lead\">Album by <span>{song.artist.name}</span></p>\r\n                            </div>\r\n                            <div className=\"col-md-3 text-md-right text-center\">\r\n                                <button onClick={() => getLyrics(`${song.artist.name}`, `${song.title}`)} className=\"btn btn-success\">Get Lyrics</button>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Songs;","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Lyrics from './Components/Lyrics';\nimport Search from './Components/Search';\nimport Songs from './Components/Songs';\n\nfunction App() {\n  const [songs, setSongs] = useState([]);\n  const [lyrics, setLyrics] = useState('');\n  const [searchInput, setSearchInput] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch(`https://api.lyrics.ovh/suggest/${searchInput}`);\n      const data = await res.json();\n      setSongs(data.data);\n      setLyrics('');\n    };\n    if (searchInput.length > 0) {\n      fetchData(searchInput);\n    }\n  }, [searchInput]);\n\n  const handleSearchClick = ({ inputValue }) => {\n    inputValue = inputValue.trim();\n    if (inputValue.length > 0) {\n      setSearchInput(inputValue)\n    }\n  }\n\n  const getLyricsFromServer = (artist, id) => {\n    console.log(`https://api.lyrics.ovh/v1/${artist}/${id}`);\n    const getLyrics = async () => {\n      const res = await fetch(`https://api.lyrics.ovh/v1/${artist}/${id}`);\n      const data = await res.json();\n      setLyrics(data.lyrics);\n    }\n    getLyrics();\n  }\n\n  return (\n    <div className=\"container\">\n      <main className=\"content-area text-center\">\n        <Search handleSearch={handleSearchClick} />\n\n        {lyrics && <Lyrics lyrics={lyrics} />}\n\n        {\n          songs.length ? <Songs allSongs={songs} getLyrics={getLyricsFromServer} /> : 'Search to get songs'\n        }\n      </main>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}